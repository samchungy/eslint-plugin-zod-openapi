name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version you wish to release eg. v0.5.0'
        required: true
        type: string

permissions: { contents: 'write' }

jobs:
  release:
    name: Version & Publish
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check Draft
        run: isDraft=$(gh release view ${{ inputs.version }} --json isDraft --jq '.isDraft'); $isDraft
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Setup Git User
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com

      - name: Version
        if: ${{ !contains(github.event.inputs.version, 'beta') }}
        run: npm version ${{ inputs.version }} --git-tag-version=false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Pre Release - Version
        if: ${{ contains(github.event.inputs.version, 'beta') }}
        run: |
          git checkout -b  ${{ inputs.version }}
          git push --force origin ${{ inputs.version }} --set-upstream
          npm version ${{ inputs.version }} --git-tag-version=false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Pre Release - Push Tags
        if: ${{ contains(github.event.inputs.version, 'beta') }}
        run: git push --force --set-upstream origin ${{ inputs.version }} && git push --tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Pre Release - Push package.json and tags
        if: ${{ contains(github.event.inputs.version, 'beta') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FILE_TO_COMMIT: package.json
          DESTINATION_BRANCH: ${{ inputs.version }}
        run: |
          sha=$(gh api --method PUT /repos/:owner/:repo/contents/$FILE_TO_COMMIT \
            -f message="Release ${{ inputs.version }}" \
            -f content="$( base64 -i $FILE_TO_COMMIT )" \
            -f encoding="base64" \
            -f branch="$DESTINATION_BRANCH" \
            -f sha="$( git rev-parse $DESTINATION_BRANCH:$FILE_TO_COMMIT )" --jq '.commit.sha');
          gh api --method POST /repos/:owner/:repo/git/refs \
            -f ref="refs/heads/${{ inputs.version }}" \
            -f sha="$sha"
      # - name: Push Tags
      #   if: ${{ contains(github.event.inputs.version, 'beta') }}
      #   run: git push --force --set-upstream origin ${{ inputs.version }} && git push --tags
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Release Draft
      #   if: ${{ !contains(github.event.inputs.version, 'beta') }}
      #   run: gh release edit ${{ inputs.version }} --draft=false --prerelease=false --latest
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Pre Release - Release Draft
      #   if: ${{ contains(github.event.inputs.version, 'beta') }}
      #   run: gh release edit ${{ inputs.version }} --draft=false --prerelease --latest=false
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
